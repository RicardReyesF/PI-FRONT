[{"C:\\Users\\Ricardo Fernandez\\Desktop\\CarpetaHenry\\Bootcamp\\PI\\PI-Food-main\\client\\src\\index.js":"1","C:\\Users\\Ricardo Fernandez\\Desktop\\CarpetaHenry\\Bootcamp\\PI\\PI-Food-main\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Ricardo Fernandez\\Desktop\\CarpetaHenry\\Bootcamp\\PI\\PI-Food-main\\client\\src\\App.js":"3","C:\\Users\\Ricardo Fernandez\\Desktop\\CarpetaHenry\\Bootcamp\\PI\\PI-Food-main\\client\\src\\components\\Home\\Home.jsx":"4","C:\\Users\\Ricardo Fernandez\\Desktop\\CarpetaHenry\\Bootcamp\\PI\\PI-Food-main\\client\\src\\components\\Recipes\\Recipes.jsx":"5","C:\\Users\\Ricardo Fernandez\\Desktop\\CarpetaHenry\\Bootcamp\\PI\\PI-Food-main\\client\\src\\components\\New-Recipes\\NewRecipes.jsx":"6","C:\\Users\\Ricardo Fernandez\\Desktop\\CarpetaHenry\\Bootcamp\\PI\\PI-Food-main\\client\\src\\components\\Detail-Recipes\\DetailRecipes.jsx":"7","C:\\Users\\Ricardo Fernandez\\Desktop\\CarpetaHenry\\Bootcamp\\PI\\PI-Food-main\\client\\src\\redux\\store\\index.js":"8","C:\\Users\\Ricardo Fernandez\\Desktop\\CarpetaHenry\\Bootcamp\\PI\\PI-Food-main\\client\\src\\redux\\reducer\\index.js":"9","C:\\Users\\Ricardo Fernandez\\Desktop\\CarpetaHenry\\Bootcamp\\PI\\PI-Food-main\\client\\src\\redux\\actions\\index.js":"10","C:\\Users\\Ricardo Fernandez\\Desktop\\CarpetaHenry\\Bootcamp\\PI\\PI-Food-main\\client\\src\\components\\CardRecipes\\Card.jsx":"11","C:\\Users\\Ricardo Fernandez\\Desktop\\CarpetaHenry\\Bootcamp\\PI\\PI-Food-main\\client\\src\\components\\Paginado\\Paginado.jsx":"12","C:\\Users\\Ricardo Fernandez\\Desktop\\CarpetaHenry\\Bootcamp\\PI\\PI-Food-main\\client\\src\\components\\CardRecipesDetail\\CardDetail.jsx":"13","C:\\Users\\Ricardo Fernandez\\Desktop\\CarpetaHenry\\Bootcamp\\PI\\PI-Food-main\\client\\src\\Validation\\index.js":"14","C:\\Users\\Ricardo Fernandez\\Desktop\\CarpetaHenry\\Bootcamp\\PI\\PI-Food-main\\client\\src\\components\\Nav\\nav.jsx":"15"},{"size":723,"mtime":1671079639434,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1653672144000,"results":"18","hashOfConfig":"17"},{"size":749,"mtime":1672700720079,"results":"19","hashOfConfig":"17"},{"size":687,"mtime":1672378569941,"results":"20","hashOfConfig":"17"},{"size":5037,"mtime":1672701208822,"results":"21","hashOfConfig":"17"},{"size":5503,"mtime":1672726518001,"results":"22","hashOfConfig":"17"},{"size":1358,"mtime":1672259382610,"results":"23","hashOfConfig":"17"},{"size":291,"mtime":1671135519164,"results":"24","hashOfConfig":"17"},{"size":3065,"mtime":1672379149005,"results":"25","hashOfConfig":"17"},{"size":1791,"mtime":1672948836204,"results":"26","hashOfConfig":"17"},{"size":906,"mtime":1672701051782,"results":"27","hashOfConfig":"17"},{"size":772,"mtime":1672347917204,"results":"28","hashOfConfig":"17"},{"size":3838,"mtime":1672721110291,"results":"29","hashOfConfig":"17"},{"size":341,"mtime":1672164052646,"results":"30","hashOfConfig":"17"},{"size":267,"mtime":1672695680331,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"70ei6t",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Ricardo Fernandez\\Desktop\\CarpetaHenry\\Bootcamp\\PI\\PI-Food-main\\client\\src\\index.js",[],["67","68"],"C:\\Users\\Ricardo Fernandez\\Desktop\\CarpetaHenry\\Bootcamp\\PI\\PI-Food-main\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Ricardo Fernandez\\Desktop\\CarpetaHenry\\Bootcamp\\PI\\PI-Food-main\\client\\src\\App.js",[],"C:\\Users\\Ricardo Fernandez\\Desktop\\CarpetaHenry\\Bootcamp\\PI\\PI-Food-main\\client\\src\\components\\Home\\Home.jsx",[],"C:\\Users\\Ricardo Fernandez\\Desktop\\CarpetaHenry\\Bootcamp\\PI\\PI-Food-main\\client\\src\\components\\Recipes\\Recipes.jsx",["69","70","71"],"import React from \"react\"\r\nimport { useState,useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { filterByDesAsc, filterbyDiets, filterByScore, getAllRecipes, search } from \"../../redux/actions\";\r\nimport { Card } from \"../CardRecipes/Card\";\r\nimport { Paginado } from \"../Paginado/Paginado\";\r\nimport { Nav } from \"../Nav/nav\";\r\nimport style from \"../Recipes/Recipes.module.css\"\r\n\r\n\r\nexport function Recipes() {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const recipes = useSelector( (state) => state.recipes);\r\n\r\n    const [currentPage,setCurrentPage] = useState(1);\r\n    const [order,setOrder]= useState('')\r\n    const [recipesForPage,setRecipesForPage] = useState(9);\r\n    const lastRecipe = currentPage * recipesForPage;\r\n    const firstRecipe= lastRecipe - recipesForPage;\r\n\r\n    const currentRecipe = recipes.slice(firstRecipe,lastRecipe);\r\n\r\n    const paginado = (numberPage) => {\r\n        setCurrentPage(numberPage)\r\n    }\r\n\r\n    useEffect(() =>{\r\n        dispatch(getAllRecipes());\r\n    },[dispatch])\r\n\r\n    function handleFilterByDiet(e){\r\n        dispatch(filterbyDiets(e.target.value))\r\n    }\r\n\r\n    function handleFilterAsc(e){\r\n        dispatch(filterByDesAsc(e.target.value));\r\n        setCurrentPage(1);\r\n        setOrder(`${e.target.value}`);\r\n\r\n    }\r\n\r\n    function handleFilterByScore(e){\r\n        dispatch(filterByScore(e.target.value))\r\n    }\r\n\r\n    function handleSearchName(e){\r\n        dispatch(search(e.target.value))\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n        \r\n        <div className={style.recipes}>\r\n\r\n                {/* <Link to=\"/\" style={{ textDecoration: \"none\" }}>\r\n                    <h1 className={style.title}>Recetas</h1>\r\n                </Link> */}\r\n            \r\n\r\n            <div className={style.divFilters}>\r\n                <h6 className={style.h6}>Filtro por</h6>\r\n                <div>\r\n                    <select onChange={e => handleFilterAsc(e)} className={style.select}>\r\n                        <option disabled={true} selected  value=\"\">Asc/Desc...</option>\r\n                        <option value=\"asc\">Asecendente</option>\r\n                        <option value=\"des\">Descendente</option>\r\n                    </select>\r\n                </div>\r\n                <select onChange={e => handleFilterByDiet(e)} className={style.select}>\r\n                <option disabled={true} selected value=\"\">Tipo de dieta...</option>\r\n                    <option value=\"all\">Todos</option>\r\n                    <option value=\"gluten free\">Gluten Free</option>\r\n                    <option value=\"ketogenic\">Ketogenic</option>\r\n                    <option value=\"vegetarian\">Vegetarian</option>\r\n                    <option value=\"ovo vegetarian\">Ovo-Vegetarian</option>\r\n                    <option value=\"vegan\">Vegan</option>\r\n                    <option value=\"paleolithic\">Paleo</option>\r\n                    <option value=\"primal\">Primal</option>\r\n                    <option value=\"low FODMAP\">Low FODMAP</option>\r\n                    <option value=\"whole 30\">Whole30</option>\r\n                </select>\r\n                <select placeholder=\"Calificacion\" onChange={e => handleFilterByScore(e)} className={style.select}>\r\n                <option disabled={true} selected value=\"\">Calificacion...</option>\r\n                    <option value=\"100-80\">100-80</option>\r\n                    <option value=\"80-60\">80-60</option>\r\n                    <option value=\"60-40\">60-40</option>\r\n                    <option value=\"40-20\">40-20</option>\r\n                    <option value=\"20-0\">20-0</option>\r\n                </select>\r\n                <input className={style.select} type=\"text\" onChange={e => handleSearchName(e)} placeholder=\"Buscar aqui...\"  />\r\n            </div>\r\n\r\n            <div>\r\n\r\n                {\r\n                    <Paginado\r\n\r\n                    recipes={recipes.length}\r\n                    recipesForPage={recipesForPage}\r\n                    paginado={paginado}\r\n                    />\r\n                }\r\n                <Link to='/new-recipes'>\r\n                    <button className={style.button}>Nueva Receta</button>\r\n                </Link>\r\n                <div className={style.divCard}>\r\n                {\r\n                    currentRecipe.length > 0 ?\r\n                        currentRecipe?.map( recipe =>{\r\n                            return(\r\n                                <Card\r\n                                key={recipe.id}\r\n                                name={recipe.name}\r\n                                image={recipe.img}\r\n                                diet = {recipe.diets}\r\n                                id={recipe.id}\r\n                                createDb={recipe.createdAt}\r\n                                />\r\n                            )\r\n                        }):\r\n                        <div className=\"loader\"></div>\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n        \r\n        \r\n\r\n\r\n    )\r\n\r\n}","C:\\Users\\Ricardo Fernandez\\Desktop\\CarpetaHenry\\Bootcamp\\PI\\PI-Food-main\\client\\src\\components\\New-Recipes\\NewRecipes.jsx",["72"],"import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {Link, useNavigate} from \"react-router-dom\"\r\nimport { getDiets } from \"../../redux/actions\";\r\nimport { postRecipe } from \"../../redux/actions\";\r\nimport { Validation } from \"../../Validation\";\r\nimport style from \"../New-Recipes/NewRecipes.module.css\"\r\nexport const NewRecipes = () => {\r\n\r\n    const diets = useSelector(state => state.diets);\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate();\r\n    useEffect(() => {\r\n        dispatch(getDiets())\r\n    },[dispatch])\r\n    const [validation, setValidation] = useState({\r\n        data:\"\",\r\n        score:\"\",\r\n    })\r\n    const [recipes, setRecipes] = useState({\r\n        name:\"\",\r\n        resumen:\"\",\r\n        score:\"\",\r\n        stepByStep:\"\",\r\n        dietId:[]\r\n\r\n    })\r\n\r\n    function handleOnchange(e){\r\n        setValidation(\r\n            Validation({\r\n                ...recipes,\r\n                [e.target.name]: e.target.value\r\n            })\r\n        );\r\n\r\n        setRecipes({\r\n            ...recipes,\r\n            [e.target.name]: e.target.value\r\n        })\r\n        console.log(recipes)\r\n    }\r\n\r\n    function handleSubmit(e){\r\n        e.preventDefault()\r\n        if (recipes.name || recipes.resumen) {\r\n            dispatch(postRecipe(recipes))\r\n            setRecipes({\r\n                name:\"\",\r\n                resumen:\"\",\r\n                score:\"\",\r\n                stepByStep:\"\",\r\n                dietId:[]\r\n            })\r\n            navigate(\"/recipes\")\r\n            \r\n        }\r\n        return validation.data\r\n    }\r\n\r\n    function handelCheck(e){\r\n        if(e.target.checked){\r\n            setRecipes({\r\n                ...recipes,\r\n                dietId: [...recipes.dietId,e.target.value]\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n            // <Link to=\"/recipes\">\r\n            //     <button>Volver</button>\r\n            // </Link>\r\n        <div className={style.divContainer}>\r\n            <h2 className={style.title}>Nueva Receta</h2>\r\n            <br />\r\n            <form onSubmit={(e) => handleSubmit(e)}>\r\n                <label className={style.titleH3} htmlFor=\"name\">Nombre</label>\r\n                <br />\r\n                <br />\r\n                <input \r\n                    className={style.input}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    placeholder=\"Nombre de la receta\"\r\n                    value={recipes.name}\r\n                    onChange={handleOnchange}\r\n                />\r\n                <p>{validation.data && validation.data}</p>\r\n                <br />\r\n                <label className={style.titleH3} htmlFor=\"score\">Puntuacion</label>\r\n                <br />\r\n                <br />\r\n                <input \r\n                    className={style.input}\r\n                    type=\"number\"\r\n                    name=\"score\"\r\n                    value={recipes.score}\r\n                    placeholder=\"0\"\r\n                    defaultValue=\"0\"\r\n                    min=\"0\"\r\n                    max=\"100\"\r\n                    onChange={handleOnchange}\r\n                />\r\n                <p>{validation.score && validation.score}</p>\r\n                <br />\r\n                <label className={style.titleH3}>Tipos de Dieta</label>\r\n                <br />\r\n                <br />\r\n                <div  >\r\n                    {\r\n                        diets.map(diet => {\r\n                            return(\r\n                                <label className={style.title}>\r\n                                    {diet.name}\r\n                                    <br />\r\n                                    <input\r\n                                        \r\n                                        type=\"checkbox\" \r\n                                        name=\"dietId\" \r\n                                        value={diet.id}\r\n                                        onChange={(e) => handelCheck(e)}\r\n                                        />\r\n                                    <br />\r\n                                </label>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n                <br />\r\n                <br />\r\n                <label className={style.titleH3} htmlFor=\"summary\">Paso a Paso</label>\r\n                <br />\r\n                <br />\r\n                <textarea\r\n                className={style.input}\r\n                    onChange={handleOnchange}\r\n                    value={recipes.stepByStep}\r\n                    name=\"stepByStep\" \r\n                    cols=\"30\" \r\n                    rows=\"10\"> \r\n                    \r\n                </textarea>\r\n                \r\n                <br />\r\n                <br />\r\n                <label className={style.titleH3} htmlFor=\"summary\">Resumen</label>\r\n                <br />\r\n                <br />\r\n                <textarea \r\n                    className={style.input}\r\n                    onChange={handleOnchange}\r\n                    value={recipes.resumen}\r\n                    name=\"resumen\" \r\n                    cols=\"30\" \r\n                    rows=\"10\">\r\n                    \r\n                </textarea>\r\n                <p>{validation.data && validation.data}</p>\r\n                <br />\r\n                <div>\r\n                    <button className={style.button} type=\"submit\">Crear</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Ricardo Fernandez\\Desktop\\CarpetaHenry\\Bootcamp\\PI\\PI-Food-main\\client\\src\\components\\Detail-Recipes\\DetailRecipes.jsx",["73"],"import  {useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\"\r\nimport { getRecipesDetail } from \"../../redux/actions\";\r\nimport { CardDetail } from \"../CardRecipesDetail/CardDetail\";\r\n\r\nexport const DetailRecipes = () => {\r\n    const { id } = useParams();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const recipesDetail = useSelector( state => state.recipesDetail)\r\n\r\n    useEffect(() =>{\r\n        dispatch(getRecipesDetail(id));\r\n    },[dispatch])\r\n\r\n    \r\n    return (\r\n        recipesDetail.length > 0?\r\n        <div>\r\n            {\r\n            recipesDetail?.map( recipe => {\r\n                \r\n                return (\r\n\r\n                    <CardDetail\r\n                        key      ={ recipe.id}\r\n                        img      = {recipe.img}\r\n                        name     = {recipe.name}\r\n                        summary  = {recipe.resumen}\r\n                        score    = {recipe.score}\r\n                        steps    = {recipe.stepByStep}\r\n                        typeDish ={recipe.typeDish}\r\n                        diet     ={recipe.diets}\r\n                        creatDb  ={recipe.createdAt}\r\n\r\n                    />\r\n                    ) \r\n            })\r\n            }\r\n        </div>\r\n        :\r\n        <div className=\"loader\"></div>\r\n    )\r\n}","C:\\Users\\Ricardo Fernandez\\Desktop\\CarpetaHenry\\Bootcamp\\PI\\PI-Food-main\\client\\src\\redux\\store\\index.js",[],"C:\\Users\\Ricardo Fernandez\\Desktop\\CarpetaHenry\\Bootcamp\\PI\\PI-Food-main\\client\\src\\redux\\reducer\\index.js",[],"C:\\Users\\Ricardo Fernandez\\Desktop\\CarpetaHenry\\Bootcamp\\PI\\PI-Food-main\\client\\src\\redux\\actions\\index.js",[],"C:\\Users\\Ricardo Fernandez\\Desktop\\CarpetaHenry\\Bootcamp\\PI\\PI-Food-main\\client\\src\\components\\CardRecipes\\Card.jsx",[],"C:\\Users\\Ricardo Fernandez\\Desktop\\CarpetaHenry\\Bootcamp\\PI\\PI-Food-main\\client\\src\\components\\Paginado\\Paginado.jsx",["74"],"import React from \"react\";\r\nimport style from \"../Paginado/Paginado.module.css\"\r\n\r\nexport function Paginado({recipes,recipesForPage,paginado}){\r\n    let pageNumber= [];\r\n    let pagesPagination = recipes/recipesForPage\r\n    let pages = Math.ceil(pagesPagination)\r\n    for (let i = 1; i <= pages; i++) {\r\n        pageNumber.push(i);\r\n        //console.log(pageNumber)\r\n    }\r\n    return(\r\n        <nav className={style.paginado}>\r\n            <ul>\r\n                {\r\n                    pageNumber?.map(nume =>(\r\n                        <li key={nume}>\r\n                            <a className={style.active} onClick={() => paginado(nume)}>{nume}</a>\r\n                        </li>\r\n                    ))\r\n                }\r\n            </ul>\r\n        </nav>\r\n    )\r\n\r\n}","C:\\Users\\Ricardo Fernandez\\Desktop\\CarpetaHenry\\Bootcamp\\PI\\PI-Food-main\\client\\src\\components\\CardRecipesDetail\\CardDetail.jsx",[],"C:\\Users\\Ricardo Fernandez\\Desktop\\CarpetaHenry\\Bootcamp\\PI\\PI-Food-main\\client\\src\\Validation\\index.js",[],"C:\\Users\\Ricardo Fernandez\\Desktop\\CarpetaHenry\\Bootcamp\\PI\\PI-Food-main\\client\\src\\components\\Nav\\nav.jsx",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":8,"column":10,"nodeType":"81","messageId":"82","endLine":8,"endColumn":13},{"ruleId":"79","severity":1,"message":"83","line":19,"column":12,"nodeType":"81","messageId":"82","endLine":19,"endColumn":17},{"ruleId":"79","severity":1,"message":"84","line":20,"column":27,"nodeType":"81","messageId":"82","endLine":20,"endColumn":44},{"ruleId":"79","severity":1,"message":"85","line":3,"column":9,"nodeType":"81","messageId":"82","endLine":3,"endColumn":13},{"ruleId":"86","severity":1,"message":"87","line":16,"column":7,"nodeType":"88","endLine":16,"endColumn":17,"suggestions":"89"},{"ruleId":"90","severity":1,"message":"91","line":18,"column":29,"nodeType":"92","endLine":18,"endColumn":88},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-unused-vars","'Nav' is defined but never used.","Identifier","unusedVar","'order' is assigned a value but never used.","'setRecipesForPage' is assigned a value but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["95"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},"Update the dependencies array to be: [dispatch, id]",{"range":"98","text":"99"},[514,524],"[dispatch, id]"]